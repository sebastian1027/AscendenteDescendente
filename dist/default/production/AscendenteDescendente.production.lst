

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 02 23:09:51 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 1.43
    13                           ; Generated 25/07/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F887 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  008F                     	;# 
    91  0090                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0095                     	;# 
    99  0096                     	;# 
   100  0097                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009A                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  0105                     	;# 
   110  0107                     	;# 
   111  0108                     	;# 
   112  0109                     	;# 
   113  010C                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  0185                     	;# 
   119  0187                     	;# 
   120  0188                     	;# 
   121  0189                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0007                     _PORTCbits	set	7
   125  0007                     _PORTC	set	7
   126  0006                     _PORTB	set	6
   127  0087                     _TRISC	set	135
   128  0086                     _TRISB	set	134
   129                           
   130                           ; #config settings
   131  0000                     
   132                           	psect	cinit
   133  07F4                     start_initialization:	
   134  07F4                     __initialization:	
   135                           
   136                           ; Clear objects allocated to COMMON
   137  07F4  01F9               	clrf	__pbssCOMMON& (0+127)
   138  07F5  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   139  07F6  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   140  07F7  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   141                           
   142                           ; Clear objects allocated to BANK0
   143  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   144  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   145  07FA  01A0               	clrf	__pbssBANK0& (0+127)
   146  07FB  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   147  07FC                     end_of_initialization:	
   148                           ;End of C runtime variable initialization code
   149                           
   150  07FC                     __end_of__initialization:	
   151  07FC  0183               	clrf	3
   152  07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   153                           
   154                           	psect	bssCOMMON
   155  0079                     __pbssCOMMON:	
   156  0079                     _estadoAnteriorIncremento:	
   157  0079                     	ds	2
   158  007B                     _bandera:	
   159  007B                     	ds	2
   160                           
   161                           	psect	bssBANK0
   162  0020                     __pbssBANK0:	
   163  0020                     _estadoAnteroriDecremento:	
   164  0020                     	ds	2
   165                           
   166                           	psect	cstackCOMMON
   167  0070                     __pcstackCOMMON:	
   168  0070                     ?_tabla:	
   169  0070                     ?_main:	
   170                           ; 1 bytes @ 0x0
   171                           
   172  0070                     tabla@num:	
   173                           ; 1 bytes @ 0x0
   174                           
   175                           
   176                           ; 2 bytes @ 0x0
   177  0070                     	ds	2
   178  0072                     ??_tabla:	
   179  0072                     tabla@aux:	
   180                           ; 1 bytes @ 0x2
   181                           
   182                           
   183                           ; 2 bytes @ 0x2
   184  0072                     	ds	2
   185  0074                     ??_main:	
   186                           
   187                           ; 1 bytes @ 0x4
   188  0074                     	ds	3
   189  0077                     main@contador:	
   190                           
   191                           ; 2 bytes @ 0x7
   192  0077                     	ds	2
   193                           
   194                           	psect	maintext
   195  0791                     __pmaintext:	
   196 ;;
   197 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   198 ;;
   199 ;; *************** function _main *****************
   200 ;; Defined at:
   201 ;;		line 15 in file "AscendenteDescendente.c"
   202 ;; Parameters:    Size  Location     Type
   203 ;;		None
   204 ;; Auto vars:     Size  Location     Type
   205 ;;  contador        2    7[COMMON] int 
   206 ;; Return value:  Size  Location     Type
   207 ;;                  1    wreg      void 
   208 ;; Registers used:
   209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   210 ;; Tracked objects:
   211 ;;		On entry : B00/0
   212 ;;		On exit  : 0/0
   213 ;;		Unchanged: 0/0
   214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   215 ;;      Params:         0       0       0       0       0
   216 ;;      Locals:         2       0       0       0       0
   217 ;;      Temps:          3       0       0       0       0
   218 ;;      Totals:         5       0       0       0       0
   219 ;;Total ram usage:        5 bytes
   220 ;; Hardware stack levels required when called:    1
   221 ;; This function calls:
   222 ;;		_tabla
   223 ;; This function is called by:
   224 ;;		Startup code after reset
   225 ;; This function uses a non-reentrant model
   226 ;;
   227                           
   228                           
   229                           ;psect for function _main
   230  0791                     _main:	
   231                           
   232                           ;AscendenteDescendente.c: 17: TRISB = 0;
   233                           
   234                           ;incstack = 0
   235                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   236  0791  1683               	bsf	3,5	;RP0=1, select bank1
   237  0792  1303               	bcf	3,6	;RP1=0, select bank1
   238  0793  0186               	clrf	6	;volatile
   239                           
   240                           ;AscendenteDescendente.c: 18: PORTB = 0;
   241  0794  1283               	bcf	3,5	;RP0=0, select bank0
   242  0795  1303               	bcf	3,6	;RP1=0, select bank0
   243  0796  0186               	clrf	6	;volatile
   244                           
   245                           ;AscendenteDescendente.c: 19: TRISC = 1;
   246  0797  3001               	movlw	1
   247  0798  1683               	bsf	3,5	;RP0=1, select bank1
   248  0799  1303               	bcf	3,6	;RP1=0, select bank1
   249  079A  0087               	movwf	7	;volatile
   250                           
   251                           ;AscendenteDescendente.c: 20: PORTC = 0;
   252  079B  1283               	bcf	3,5	;RP0=0, select bank0
   253  079C  1303               	bcf	3,6	;RP1=0, select bank0
   254  079D  0187               	clrf	7	;volatile
   255                           
   256                           ;AscendenteDescendente.c: 21: int contador=0;
   257  079E  01F7               	clrf	main@contador
   258  079F  01F8               	clrf	main@contador+1
   259  07A0                     l638:	
   260                           ;AscendenteDescendente.c: 22: while (1) {
   261                           
   262                           
   263                           ;AscendenteDescendente.c: 23: if(PORTCbits.RC1 == 1)
   264  07A0  1283               	bcf	3,5	;RP0=0, select bank0
   265  07A1  1303               	bcf	3,6	;RP1=0, select bank0
   266  07A2  1C87               	btfss	7,1	;volatile
   267  07A3  2FA8               	goto	l642
   268                           
   269                           ;AscendenteDescendente.c: 24: bandera = 1;
   270  07A4  3001               	movlw	1
   271  07A5  00FB               	movwf	_bandera
   272  07A6  3000               	movlw	0
   273  07A7  00FC               	movwf	_bandera+1
   274  07A8                     l642:	
   275                           
   276                           ;AscendenteDescendente.c: 25: if(PORTCbits.RC2 == 1)
   277  07A8  1D07               	btfss	7,2	;volatile
   278  07A9  2FAE               	goto	l646
   279                           
   280                           ;AscendenteDescendente.c: 26: bandera = 2;
   281  07AA  3002               	movlw	2
   282  07AB  00FB               	movwf	_bandera
   283  07AC  3000               	movlw	0
   284  07AD  00FC               	movwf	_bandera+1
   285  07AE                     l646:	
   286                           
   287                           ;AscendenteDescendente.c: 27: tabla(contador);
   288  07AE  0878               	movf	main@contador+1,w
   289  07AF  00F1               	movwf	tabla@num+1
   290  07B0  0877               	movf	main@contador,w
   291  07B1  00F0               	movwf	tabla@num
   292  07B2  120A  118A  2734  120A  118A  	fcall	_tabla
   293                           
   294                           ;AscendenteDescendente.c: 28: _delay((unsigned long)((1000)*(4000000/4000.0)));
   295  07B7  3006               	movlw	6
   296  07B8  00F6               	movwf	??_main+2
   297  07B9  3013               	movlw	19
   298  07BA  00F5               	movwf	??_main+1
   299  07BB  30AD               	movlw	173
   300  07BC  00F4               	movwf	??_main
   301  07BD                     u177:	
   302  07BD  0BF4               	decfsz	??_main,f
   303  07BE  2FBD               	goto	u177
   304  07BF  0BF5               	decfsz	??_main+1,f
   305  07C0  2FBD               	goto	u177
   306  07C1  0BF6               	decfsz	??_main+2,f
   307  07C2  2FBD               	goto	u177
   308  07C3  2FC4               	nop2
   309                           
   310                           ;AscendenteDescendente.c: 29: if(bandera==1)
   311  07C4  037B               	decf	_bandera,w
   312  07C5  047C               	iorwf	_bandera+1,w
   313  07C6  1D03               	btfss	3,2
   314  07C7  2FCE               	goto	l654
   315                           
   316                           ;AscendenteDescendente.c: 30: contador++;
   317  07C8  3001               	movlw	1
   318  07C9  07F7               	addwf	main@contador,f
   319  07CA  1803               	skipnc
   320  07CB  0AF8               	incf	main@contador+1,f
   321  07CC  3000               	movlw	0
   322  07CD  2FD8               	goto	L1
   323  07CE                     l654:	
   324                           
   325                           ;AscendenteDescendente.c: 31: else if(bandera==2)
   326  07CE  3002               	movlw	2
   327  07CF  067B               	xorwf	_bandera,w
   328  07D0  047C               	iorwf	_bandera+1,w
   329  07D1  1D03               	btfss	3,2
   330  07D2  2FD9               	goto	l658
   331                           
   332                           ;AscendenteDescendente.c: 32: contador--;
   333  07D3  30FF               	movlw	255
   334  07D4  07F7               	addwf	main@contador,f
   335  07D5  1803               	skipnc
   336  07D6  0AF8               	incf	main@contador+1,f
   337  07D7  30FF               	movlw	255
   338  07D8                     L1:	
   339  07D8  07F8               	addwf	main@contador+1,f
   340  07D9                     l658:	
   341                           
   342                           ;AscendenteDescendente.c: 33: if(contador==10&&bandera==1)
   343  07D9  300A               	movlw	10
   344  07DA  0677               	xorwf	main@contador,w
   345  07DB  0478               	iorwf	main@contador+1,w
   346  07DC  1D03               	btfss	3,2
   347  07DD  2FE4               	goto	l664
   348  07DE  037B               	decf	_bandera,w
   349  07DF  047C               	iorwf	_bandera+1,w
   350  07E0  1D03               	btfss	3,2
   351  07E1  2FE4               	goto	l664
   352                           
   353                           ;AscendenteDescendente.c: 34: contador=0;
   354  07E2  01F7               	clrf	main@contador
   355  07E3  01F8               	clrf	main@contador+1
   356  07E4                     l664:	
   357                           
   358                           ;AscendenteDescendente.c: 35: if(contador==-1&&bandera==2)
   359  07E4  0A77               	incf	main@contador,w
   360  07E5  1D03               	skipz
   361  07E6  2FA0               	goto	l638
   362  07E7  0A78               	incf	main@contador+1,w
   363  07E8  1D03               	btfss	3,2
   364  07E9  2FA0               	goto	l638
   365  07EA  3002               	movlw	2
   366  07EB  067B               	xorwf	_bandera,w
   367  07EC  047C               	iorwf	_bandera+1,w
   368  07ED  1D03               	btfss	3,2
   369  07EE  2FA0               	goto	l638
   370                           
   371                           ;AscendenteDescendente.c: 36: contador=9;
   372  07EF  3009               	movlw	9
   373  07F0  00F7               	movwf	main@contador
   374  07F1  3000               	movlw	0
   375  07F2  00F8               	movwf	main@contador+1
   376  07F3  2FA0               	goto	l638
   377  07F4                     __end_of_main:	
   378                           
   379                           	psect	text1
   380  0734                     __ptext1:	
   381 ;; *************** function _tabla *****************
   382 ;; Defined at:
   383 ;;		line 45 in file "AscendenteDescendente.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;  num             2    0[COMMON] int 
   386 ;; Auto vars:     Size  Location     Type
   387 ;;  aux             2    2[COMMON] int 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         2       0       0       0       0
   398 ;;      Locals:         2       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         4       0       0       0       0
   401 ;;Total ram usage:        4 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _tabla
   412  0734                     _tabla:	
   413                           
   414                           ;AscendenteDescendente.c: 46: int aux = num;
   415                           
   416                           ;incstack = 0
   417                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   418  0734  0871               	movf	tabla@num+1,w
   419  0735  00F3               	movwf	tabla@aux+1
   420  0736  0870               	movf	tabla@num,w
   421  0737  00F2               	movwf	tabla@aux
   422                           
   423                           ;AscendenteDescendente.c: 47: switch(aux)
   424  0738  2F6B               	goto	l624
   425  0739                     l602:	
   426                           ;AscendenteDescendente.c: 48: {
   427                           ;AscendenteDescendente.c: 49: case 0:
   428                           
   429                           
   430                           ;AscendenteDescendente.c: 50: PORTB = 0x3F;
   431  0739  303F               	movlw	63
   432  073A  1283               	bcf	3,5	;RP0=0, select bank0
   433  073B  1303               	bcf	3,6	;RP1=0, select bank0
   434  073C  0086               	movwf	6	;volatile
   435                           
   436                           ;AscendenteDescendente.c: 51: break;
   437  073D  0008               	return
   438  073E                     l604:	
   439                           ;AscendenteDescendente.c: 52: case 1:
   440                           
   441                           
   442                           ;AscendenteDescendente.c: 53: PORTB = 0x06;
   443  073E  3006               	movlw	6
   444  073F  1283               	bcf	3,5	;RP0=0, select bank0
   445  0740  1303               	bcf	3,6	;RP1=0, select bank0
   446  0741  0086               	movwf	6	;volatile
   447                           
   448                           ;AscendenteDescendente.c: 54: break;
   449  0742  0008               	return
   450  0743                     l606:	
   451                           ;AscendenteDescendente.c: 55: case 2:
   452                           
   453                           
   454                           ;AscendenteDescendente.c: 56: PORTB = 0x5B;
   455  0743  305B               	movlw	91
   456  0744  1283               	bcf	3,5	;RP0=0, select bank0
   457  0745  1303               	bcf	3,6	;RP1=0, select bank0
   458  0746  0086               	movwf	6	;volatile
   459                           
   460                           ;AscendenteDescendente.c: 57: break;
   461  0747  0008               	return
   462  0748                     l608:	
   463                           ;AscendenteDescendente.c: 58: case 3:
   464                           
   465                           
   466                           ;AscendenteDescendente.c: 59: PORTB = 0x4F;
   467  0748  304F               	movlw	79
   468  0749  1283               	bcf	3,5	;RP0=0, select bank0
   469  074A  1303               	bcf	3,6	;RP1=0, select bank0
   470  074B  0086               	movwf	6	;volatile
   471                           
   472                           ;AscendenteDescendente.c: 60: break;
   473  074C  0008               	return
   474  074D                     l610:	
   475                           ;AscendenteDescendente.c: 61: case 4:
   476                           
   477                           
   478                           ;AscendenteDescendente.c: 62: PORTB = 0x66;
   479  074D  3066               	movlw	102
   480  074E  1283               	bcf	3,5	;RP0=0, select bank0
   481  074F  1303               	bcf	3,6	;RP1=0, select bank0
   482  0750  0086               	movwf	6	;volatile
   483                           
   484                           ;AscendenteDescendente.c: 63: break;
   485  0751  0008               	return
   486  0752                     l612:	
   487                           ;AscendenteDescendente.c: 64: case 5:
   488                           
   489                           
   490                           ;AscendenteDescendente.c: 65: PORTB = 0x6D;
   491  0752  306D               	movlw	109
   492  0753  1283               	bcf	3,5	;RP0=0, select bank0
   493  0754  1303               	bcf	3,6	;RP1=0, select bank0
   494  0755  0086               	movwf	6	;volatile
   495                           
   496                           ;AscendenteDescendente.c: 66: break;
   497  0756  0008               	return
   498  0757                     l614:	
   499                           ;AscendenteDescendente.c: 67: case 6:
   500                           
   501                           
   502                           ;AscendenteDescendente.c: 68: PORTB = 0x7D;
   503  0757  307D               	movlw	125
   504  0758  1283               	bcf	3,5	;RP0=0, select bank0
   505  0759  1303               	bcf	3,6	;RP1=0, select bank0
   506  075A  0086               	movwf	6	;volatile
   507                           
   508                           ;AscendenteDescendente.c: 69: break;
   509  075B  0008               	return
   510  075C                     l616:	
   511                           ;AscendenteDescendente.c: 70: case 7:
   512                           
   513                           
   514                           ;AscendenteDescendente.c: 71: PORTB = 0x07;
   515  075C  3007               	movlw	7
   516  075D  1283               	bcf	3,5	;RP0=0, select bank0
   517  075E  1303               	bcf	3,6	;RP1=0, select bank0
   518  075F  0086               	movwf	6	;volatile
   519                           
   520                           ;AscendenteDescendente.c: 72: break;
   521  0760  0008               	return
   522  0761                     l618:	
   523                           ;AscendenteDescendente.c: 73: case 8:
   524                           
   525                           
   526                           ;AscendenteDescendente.c: 74: PORTB = 0x7F;
   527  0761  307F               	movlw	127
   528  0762  1283               	bcf	3,5	;RP0=0, select bank0
   529  0763  1303               	bcf	3,6	;RP1=0, select bank0
   530  0764  0086               	movwf	6	;volatile
   531                           
   532                           ;AscendenteDescendente.c: 75: break;
   533  0765  0008               	return
   534  0766                     l620:	
   535                           ;AscendenteDescendente.c: 76: case 9:
   536                           
   537                           
   538                           ;AscendenteDescendente.c: 77: PORTB = 0x6F;
   539  0766  306F               	movlw	111
   540  0767  1283               	bcf	3,5	;RP0=0, select bank0
   541  0768  1303               	bcf	3,6	;RP1=0, select bank0
   542  0769  0086               	movwf	6	;volatile
   543                           
   544                           ;AscendenteDescendente.c: 79: }
   545                           
   546                           ;AscendenteDescendente.c: 78: break;
   547  076A  0008               	return
   548  076B                     l624:	
   549                           
   550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   551                           ; Switch size 1, requested type "space"
   552                           ; Number of cases is 1, Range of values is 0 to 0
   553                           ; switch strategies available:
   554                           ; Name         Instructions Cycles
   555                           ; simple_byte            4     3 (average)
   556                           ; direct_byte           11     8 (fixed)
   557                           ; jumptable            260     6 (fixed)
   558                           ;	Chosen strategy is simple_byte
   559  076B  0873               	movf	tabla@aux+1,w
   560  076C  3A00               	xorlw	0	; case 0
   561  076D  1903               	skipnz
   562  076E  2F70               	goto	l690
   563  076F  2F90               	goto	l50
   564  0770                     l690:	
   565                           
   566                           ; Switch size 1, requested type "space"
   567                           ; Number of cases is 10, Range of values is 0 to 9
   568                           ; switch strategies available:
   569                           ; Name         Instructions Cycles
   570                           ; simple_byte           31    16 (average)
   571                           ; direct_byte           38     8 (fixed)
   572                           ; jumptable            260     6 (fixed)
   573                           ;	Chosen strategy is simple_byte
   574  0770  0872               	movf	tabla@aux,w
   575  0771  3A00               	xorlw	0	; case 0
   576  0772  1903               	skipnz
   577  0773  2F39               	goto	l602
   578  0774  3A01               	xorlw	1	; case 1
   579  0775  1903               	skipnz
   580  0776  2F3E               	goto	l604
   581  0777  3A03               	xorlw	3	; case 2
   582  0778  1903               	skipnz
   583  0779  2F43               	goto	l606
   584  077A  3A01               	xorlw	1	; case 3
   585  077B  1903               	skipnz
   586  077C  2F48               	goto	l608
   587  077D  3A07               	xorlw	7	; case 4
   588  077E  1903               	skipnz
   589  077F  2F4D               	goto	l610
   590  0780  3A01               	xorlw	1	; case 5
   591  0781  1903               	skipnz
   592  0782  2F52               	goto	l612
   593  0783  3A03               	xorlw	3	; case 6
   594  0784  1903               	skipnz
   595  0785  2F57               	goto	l614
   596  0786  3A01               	xorlw	1	; case 7
   597  0787  1903               	skipnz
   598  0788  2F5C               	goto	l616
   599  0789  3A0F               	xorlw	15	; case 8
   600  078A  1903               	skipnz
   601  078B  2F61               	goto	l618
   602  078C  3A01               	xorlw	1	; case 9
   603  078D  1903               	skipnz
   604  078E  2F66               	goto	l620
   605  078F  2F90               	goto	l50
   606  0790                     l50:	
   607  0790  0008               	return
   608  0791                     __end_of_tabla:	
   609  007E                     btemp	set	126	;btemp
   610  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     169
                                              4 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (1) _tabla                                                4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 02 23:09:51 2017

             __CFG_CP$OFF 0000                        l50 0790                       l610 074D  
                     l602 0739                       l620 0766                       l612 0752  
                     l604 073E                       l614 0757                       l606 0743  
                     l616 075C                       l608 0748                       l624 076B  
                     l618 0761                       l642 07A8                       l654 07CE  
                     l646 07AE                       l638 07A0                       l664 07E4  
                     l690 0770                       l658 07D9                       u177 07BD  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WDTE$ON 0000  
            __CFG_WRT$OFF 0000                      _main 0791                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
            main@contador 0077                     ?_main 0070                     _PORTB 0006  
                   _PORTC 0007                     _TRISB 0086                     _TRISC 0087  
          __CFG_FCMEN$OFF 0000                     _tabla 0734            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E           __initialization 07F4  
            __end_of_main 07F4                    ??_main 0074                    ?_tabla 0070  
          __CFG_PWRTE$OFF 0000  _estadoAnteriorIncremento 0079   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_tabla 0791                   ??_tabla 0072  
              __pbssBANK0 0020                __pmaintext 0791                   _bandera 007B  
                 __ptext1 0734      end_of_initialization 07FC                 _PORTCbits 0007  
_estadoAnteroriDecremento 0020       start_initialization 07F4  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0079                 ___latbits 0002            __size_of_tabla 005D  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0063                  tabla@aux 0072  
                tabla@num 0070  
