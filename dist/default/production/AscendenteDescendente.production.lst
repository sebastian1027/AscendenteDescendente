

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 03 21:33:52 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.43
    12                           ; Generated 25/07/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0007                     _PORTCbits	set	7
   124  0007                     _PORTC	set	7
   125  0006                     _PORTB	set	6
   126  0087                     _TRISC	set	135
   127  0086                     _TRISB	set	134
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  07FA                     start_initialization:	
   133  07FA                     __initialization:	
   134                           
   135                           ; Clear objects allocated to COMMON
   136  07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   137  07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   138  07FC                     end_of_initialization:	
   139                           ;End of C runtime variable initialization code
   140                           
   141  07FC                     __end_of__initialization:	
   142  07FC  0183               	clrf	3
   143  07FD  120A  118A  2F97   	ljmp	_main	;jump to C main() function
   144                           
   145                           	psect	bssCOMMON
   146  0079                     __pbssCOMMON:	
   147  0079                     _bandera:	
   148  0079                     	ds	2
   149                           
   150                           	psect	cstackCOMMON
   151  0070                     __pcstackCOMMON:	
   152  0070                     ?_tabla:	
   153  0070                     ?_main:	
   154                           ; 1 bytes @ 0x0
   155                           
   156  0070                     tabla@num:	
   157                           ; 1 bytes @ 0x0
   158                           
   159                           
   160                           ; 2 bytes @ 0x0
   161  0070                     	ds	2
   162  0072                     ??_tabla:	
   163  0072                     tabla@aux:	
   164                           ; 1 bytes @ 0x2
   165                           
   166                           
   167                           ; 2 bytes @ 0x2
   168  0072                     	ds	2
   169  0074                     ??_main:	
   170                           
   171                           ; 1 bytes @ 0x4
   172  0074                     	ds	3
   173  0077                     main@contador:	
   174                           
   175                           ; 2 bytes @ 0x7
   176  0077                     	ds	2
   177                           
   178                           	psect	maintext
   179  0797                     __pmaintext:	
   180 ;;
   181 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   182 ;;
   183 ;; *************** function _main *****************
   184 ;; Defined at:
   185 ;;		line 15 in file "AscendenteDescendente.c"
   186 ;; Parameters:    Size  Location     Type
   187 ;;		None
   188 ;; Auto vars:     Size  Location     Type
   189 ;;  contador        2    7[COMMON] int 
   190 ;; Return value:  Size  Location     Type
   191 ;;                  1    wreg      void 
   192 ;; Registers used:
   193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   194 ;; Tracked objects:
   195 ;;		On entry : B00/0
   196 ;;		On exit  : 0/0
   197 ;;		Unchanged: 0/0
   198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   199 ;;      Params:         0       0       0       0       0
   200 ;;      Locals:         2       0       0       0       0
   201 ;;      Temps:          3       0       0       0       0
   202 ;;      Totals:         5       0       0       0       0
   203 ;;Total ram usage:        5 bytes
   204 ;; Hardware stack levels required when called:    1
   205 ;; This function calls:
   206 ;;		_tabla
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           
   213                           ;psect for function _main
   214  0797                     _main:	
   215                           
   216                           ;AscendenteDescendente.c: 17: TRISB = 0;
   217                           
   218                           ;incstack = 0
   219                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   220  0797  1683               	bsf	3,5	;RP0=1, select bank1
   221  0798  1303               	bcf	3,6	;RP1=0, select bank1
   222  0799  0186               	clrf	6	;volatile
   223                           
   224                           ;AscendenteDescendente.c: 18: PORTB = 0;
   225  079A  1283               	bcf	3,5	;RP0=0, select bank0
   226  079B  1303               	bcf	3,6	;RP1=0, select bank0
   227  079C  0186               	clrf	6	;volatile
   228                           
   229                           ;AscendenteDescendente.c: 19: TRISC = 1;
   230  079D  3001               	movlw	1
   231  079E  1683               	bsf	3,5	;RP0=1, select bank1
   232  079F  1303               	bcf	3,6	;RP1=0, select bank1
   233  07A0  0087               	movwf	7	;volatile
   234                           
   235                           ;AscendenteDescendente.c: 20: PORTC = 0;
   236  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   237  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   238  07A3  0187               	clrf	7	;volatile
   239                           
   240                           ;AscendenteDescendente.c: 21: int contador=0;
   241  07A4  01F7               	clrf	main@contador
   242  07A5  01F8               	clrf	main@contador+1
   243  07A6                     l634:	
   244                           ;AscendenteDescendente.c: 22: while (1) {
   245                           
   246                           
   247                           ;AscendenteDescendente.c: 23: if(PORTCbits.RC1 == 1)
   248  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   249  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   250  07A8  1C87               	btfss	7,1	;volatile
   251  07A9  2FAE               	goto	l638
   252                           
   253                           ;AscendenteDescendente.c: 24: bandera = 1;
   254  07AA  3001               	movlw	1
   255  07AB  00F9               	movwf	_bandera
   256  07AC  3000               	movlw	0
   257  07AD  00FA               	movwf	_bandera+1
   258  07AE                     l638:	
   259                           
   260                           ;AscendenteDescendente.c: 25: if(PORTCbits.RC2 == 1)
   261  07AE  1D07               	btfss	7,2	;volatile
   262  07AF  2FB4               	goto	l642
   263                           
   264                           ;AscendenteDescendente.c: 26: bandera = 2;
   265  07B0  3002               	movlw	2
   266  07B1  00F9               	movwf	_bandera
   267  07B2  3000               	movlw	0
   268  07B3  00FA               	movwf	_bandera+1
   269  07B4                     l642:	
   270                           
   271                           ;AscendenteDescendente.c: 27: tabla(contador);
   272  07B4  0878               	movf	main@contador+1,w
   273  07B5  00F1               	movwf	tabla@num+1
   274  07B6  0877               	movf	main@contador,w
   275  07B7  00F0               	movwf	tabla@num
   276  07B8  120A  118A  273A  120A  118A  	fcall	_tabla
   277                           
   278                           ;AscendenteDescendente.c: 28: _delay((unsigned long)((500)*(4000000/4000.0)));
   279  07BD  3003               	movlw	3
   280  07BE  00F6               	movwf	??_main+2
   281  07BF  308A               	movlw	138
   282  07C0  00F5               	movwf	??_main+1
   283  07C1  3055               	movlw	85
   284  07C2  00F4               	movwf	??_main
   285  07C3                     u177:	
   286  07C3  0BF4               	decfsz	??_main,f
   287  07C4  2FC3               	goto	u177
   288  07C5  0BF5               	decfsz	??_main+1,f
   289  07C6  2FC3               	goto	u177
   290  07C7  0BF6               	decfsz	??_main+2,f
   291  07C8  2FC3               	goto	u177
   292  07C9  2FCA               	nop2
   293                           
   294                           ;AscendenteDescendente.c: 29: if(bandera==1)
   295  07CA  0379               	decf	_bandera,w
   296  07CB  047A               	iorwf	_bandera+1,w
   297  07CC  1D03               	btfss	3,2
   298  07CD  2FD4               	goto	l650
   299                           
   300                           ;AscendenteDescendente.c: 30: contador++;
   301  07CE  3001               	movlw	1
   302  07CF  07F7               	addwf	main@contador,f
   303  07D0  1803               	skipnc
   304  07D1  0AF8               	incf	main@contador+1,f
   305  07D2  3000               	movlw	0
   306  07D3  2FDE               	goto	L1
   307  07D4                     l650:	
   308                           
   309                           ;AscendenteDescendente.c: 31: else if(bandera==2)
   310  07D4  3002               	movlw	2
   311  07D5  0679               	xorwf	_bandera,w
   312  07D6  047A               	iorwf	_bandera+1,w
   313  07D7  1D03               	btfss	3,2
   314  07D8  2FDF               	goto	l654
   315                           
   316                           ;AscendenteDescendente.c: 32: contador--;
   317  07D9  30FF               	movlw	255
   318  07DA  07F7               	addwf	main@contador,f
   319  07DB  1803               	skipnc
   320  07DC  0AF8               	incf	main@contador+1,f
   321  07DD  30FF               	movlw	255
   322  07DE                     L1:	
   323  07DE  07F8               	addwf	main@contador+1,f
   324  07DF                     l654:	
   325                           
   326                           ;AscendenteDescendente.c: 33: if(contador==10&&bandera==1)
   327  07DF  300A               	movlw	10
   328  07E0  0677               	xorwf	main@contador,w
   329  07E1  0478               	iorwf	main@contador+1,w
   330  07E2  1D03               	btfss	3,2
   331  07E3  2FEA               	goto	l660
   332  07E4  0379               	decf	_bandera,w
   333  07E5  047A               	iorwf	_bandera+1,w
   334  07E6  1D03               	btfss	3,2
   335  07E7  2FEA               	goto	l660
   336                           
   337                           ;AscendenteDescendente.c: 34: contador=0;
   338  07E8  01F7               	clrf	main@contador
   339  07E9  01F8               	clrf	main@contador+1
   340  07EA                     l660:	
   341                           
   342                           ;AscendenteDescendente.c: 35: if(contador==-1&&bandera==2)
   343  07EA  0A77               	incf	main@contador,w
   344  07EB  1D03               	skipz
   345  07EC  2FA6               	goto	l634
   346  07ED  0A78               	incf	main@contador+1,w
   347  07EE  1D03               	btfss	3,2
   348  07EF  2FA6               	goto	l634
   349  07F0  3002               	movlw	2
   350  07F1  0679               	xorwf	_bandera,w
   351  07F2  047A               	iorwf	_bandera+1,w
   352  07F3  1D03               	btfss	3,2
   353  07F4  2FA6               	goto	l634
   354                           
   355                           ;AscendenteDescendente.c: 36: contador=9;
   356  07F5  3009               	movlw	9
   357  07F6  00F7               	movwf	main@contador
   358  07F7  3000               	movlw	0
   359  07F8  00F8               	movwf	main@contador+1
   360  07F9  2FA6               	goto	l634
   361  07FA                     __end_of_main:	
   362                           
   363                           	psect	text1
   364  073A                     __ptext1:	
   365 ;; *************** function _tabla *****************
   366 ;; Defined at:
   367 ;;		line 45 in file "AscendenteDescendente.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  num             2    0[COMMON] int 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  aux             2    2[COMMON] int 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      void 
   374 ;; Registers used:
   375 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   381 ;;      Params:         2       0       0       0       0
   382 ;;      Locals:         2       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0
   384 ;;      Totals:         4       0       0       0       0
   385 ;;Total ram usage:        4 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; This function calls:
   388 ;;		Nothing
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           
   395                           ;psect for function _tabla
   396  073A                     _tabla:	
   397                           
   398                           ;AscendenteDescendente.c: 46: int aux = num;
   399                           
   400                           ;incstack = 0
   401                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
   402  073A  0871               	movf	tabla@num+1,w
   403  073B  00F3               	movwf	tabla@aux+1
   404  073C  0870               	movf	tabla@num,w
   405  073D  00F2               	movwf	tabla@aux
   406                           
   407                           ;AscendenteDescendente.c: 48: switch(aux)
   408  073E  2F71               	goto	l620
   409  073F                     l598:	
   410                           ;AscendenteDescendente.c: 49: {
   411                           ;AscendenteDescendente.c: 50: case 0:
   412                           
   413                           
   414                           ;AscendenteDescendente.c: 51: PORTB = 0x3F;
   415  073F  303F               	movlw	63
   416  0740  1283               	bcf	3,5	;RP0=0, select bank0
   417  0741  1303               	bcf	3,6	;RP1=0, select bank0
   418  0742  0086               	movwf	6	;volatile
   419                           
   420                           ;AscendenteDescendente.c: 52: break;
   421  0743  0008               	return
   422  0744                     l600:	
   423                           ;AscendenteDescendente.c: 53: case 1:
   424                           
   425                           
   426                           ;AscendenteDescendente.c: 54: PORTB = 0x06;
   427  0744  3006               	movlw	6
   428  0745  1283               	bcf	3,5	;RP0=0, select bank0
   429  0746  1303               	bcf	3,6	;RP1=0, select bank0
   430  0747  0086               	movwf	6	;volatile
   431                           
   432                           ;AscendenteDescendente.c: 55: break;
   433  0748  0008               	return
   434  0749                     l602:	
   435                           ;AscendenteDescendente.c: 56: case 2:
   436                           
   437                           
   438                           ;AscendenteDescendente.c: 57: PORTB = 0x5B;
   439  0749  305B               	movlw	91
   440  074A  1283               	bcf	3,5	;RP0=0, select bank0
   441  074B  1303               	bcf	3,6	;RP1=0, select bank0
   442  074C  0086               	movwf	6	;volatile
   443                           
   444                           ;AscendenteDescendente.c: 58: break;
   445  074D  0008               	return
   446  074E                     l604:	
   447                           ;AscendenteDescendente.c: 59: case 3:
   448                           
   449                           
   450                           ;AscendenteDescendente.c: 60: PORTB = 0x4F;
   451  074E  304F               	movlw	79
   452  074F  1283               	bcf	3,5	;RP0=0, select bank0
   453  0750  1303               	bcf	3,6	;RP1=0, select bank0
   454  0751  0086               	movwf	6	;volatile
   455                           
   456                           ;AscendenteDescendente.c: 61: break;
   457  0752  0008               	return
   458  0753                     l606:	
   459                           ;AscendenteDescendente.c: 62: case 4:
   460                           
   461                           
   462                           ;AscendenteDescendente.c: 63: PORTB = 0x66;
   463  0753  3066               	movlw	102
   464  0754  1283               	bcf	3,5	;RP0=0, select bank0
   465  0755  1303               	bcf	3,6	;RP1=0, select bank0
   466  0756  0086               	movwf	6	;volatile
   467                           
   468                           ;AscendenteDescendente.c: 64: break;
   469  0757  0008               	return
   470  0758                     l608:	
   471                           ;AscendenteDescendente.c: 65: case 5:
   472                           
   473                           
   474                           ;AscendenteDescendente.c: 66: PORTB = 0x6D;
   475  0758  306D               	movlw	109
   476  0759  1283               	bcf	3,5	;RP0=0, select bank0
   477  075A  1303               	bcf	3,6	;RP1=0, select bank0
   478  075B  0086               	movwf	6	;volatile
   479                           
   480                           ;AscendenteDescendente.c: 67: break;
   481  075C  0008               	return
   482  075D                     l610:	
   483                           ;AscendenteDescendente.c: 68: case 6:
   484                           
   485                           
   486                           ;AscendenteDescendente.c: 69: PORTB = 0x7D;
   487  075D  307D               	movlw	125
   488  075E  1283               	bcf	3,5	;RP0=0, select bank0
   489  075F  1303               	bcf	3,6	;RP1=0, select bank0
   490  0760  0086               	movwf	6	;volatile
   491                           
   492                           ;AscendenteDescendente.c: 70: break;
   493  0761  0008               	return
   494  0762                     l612:	
   495                           ;AscendenteDescendente.c: 71: case 7:
   496                           
   497                           
   498                           ;AscendenteDescendente.c: 72: PORTB = 0x07;
   499  0762  3007               	movlw	7
   500  0763  1283               	bcf	3,5	;RP0=0, select bank0
   501  0764  1303               	bcf	3,6	;RP1=0, select bank0
   502  0765  0086               	movwf	6	;volatile
   503                           
   504                           ;AscendenteDescendente.c: 73: break;
   505  0766  0008               	return
   506  0767                     l614:	
   507                           ;AscendenteDescendente.c: 74: case 8:
   508                           
   509                           
   510                           ;AscendenteDescendente.c: 75: PORTB = 0x7F;
   511  0767  307F               	movlw	127
   512  0768  1283               	bcf	3,5	;RP0=0, select bank0
   513  0769  1303               	bcf	3,6	;RP1=0, select bank0
   514  076A  0086               	movwf	6	;volatile
   515                           
   516                           ;AscendenteDescendente.c: 76: break;
   517  076B  0008               	return
   518  076C                     l616:	
   519                           ;AscendenteDescendente.c: 77: case 9:
   520                           
   521                           
   522                           ;AscendenteDescendente.c: 78: PORTB = 0x6F;
   523  076C  306F               	movlw	111
   524  076D  1283               	bcf	3,5	;RP0=0, select bank0
   525  076E  1303               	bcf	3,6	;RP1=0, select bank0
   526  076F  0086               	movwf	6	;volatile
   527                           
   528                           ;AscendenteDescendente.c: 80: }
   529                           
   530                           ;AscendenteDescendente.c: 79: break;
   531  0770  0008               	return
   532  0771                     l620:	
   533                           
   534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   535                           ; Switch size 1, requested type "space"
   536                           ; Number of cases is 1, Range of values is 0 to 0
   537                           ; switch strategies available:
   538                           ; Name         Instructions Cycles
   539                           ; simple_byte            4     3 (average)
   540                           ; direct_byte           11     8 (fixed)
   541                           ; jumptable            260     6 (fixed)
   542                           ;	Chosen strategy is simple_byte
   543  0771  0873               	movf	tabla@aux+1,w
   544  0772  3A00               	xorlw	0	; case 0
   545  0773  1903               	skipnz
   546  0774  2F76               	goto	l686
   547  0775  2F96               	goto	l46
   548  0776                     l686:	
   549                           
   550                           ; Switch size 1, requested type "space"
   551                           ; Number of cases is 10, Range of values is 0 to 9
   552                           ; switch strategies available:
   553                           ; Name         Instructions Cycles
   554                           ; simple_byte           31    16 (average)
   555                           ; direct_byte           38     8 (fixed)
   556                           ; jumptable            260     6 (fixed)
   557                           ;	Chosen strategy is simple_byte
   558  0776  0872               	movf	tabla@aux,w
   559  0777  3A00               	xorlw	0	; case 0
   560  0778  1903               	skipnz
   561  0779  2F3F               	goto	l598
   562  077A  3A01               	xorlw	1	; case 1
   563  077B  1903               	skipnz
   564  077C  2F44               	goto	l600
   565  077D  3A03               	xorlw	3	; case 2
   566  077E  1903               	skipnz
   567  077F  2F49               	goto	l602
   568  0780  3A01               	xorlw	1	; case 3
   569  0781  1903               	skipnz
   570  0782  2F4E               	goto	l604
   571  0783  3A07               	xorlw	7	; case 4
   572  0784  1903               	skipnz
   573  0785  2F53               	goto	l606
   574  0786  3A01               	xorlw	1	; case 5
   575  0787  1903               	skipnz
   576  0788  2F58               	goto	l608
   577  0789  3A03               	xorlw	3	; case 6
   578  078A  1903               	skipnz
   579  078B  2F5D               	goto	l610
   580  078C  3A01               	xorlw	1	; case 7
   581  078D  1903               	skipnz
   582  078E  2F62               	goto	l612
   583  078F  3A0F               	xorlw	15	; case 8
   584  0790  1903               	skipnz
   585  0791  2F67               	goto	l614
   586  0792  3A01               	xorlw	1	; case 9
   587  0793  1903               	skipnz
   588  0794  2F6C               	goto	l616
   589  0795  2F96               	goto	l46
   590  0796                     l46:	
   591  0796  0008               	return
   592  0797                     __end_of_tabla:	
   593  007E                     btemp	set	126	;btemp
   594  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_tabla

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     169
                                              4 COMMON     5     5      0
                              _tabla
 ---------------------------------------------------------------------------------
 (1) _tabla                                                4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _tabla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 03 21:33:52 2017

             __CFG_CP$OFF 0000                        l46 0796                       l600 0744  
                     l610 075D                       l602 0749                       l612 0762  
                     l604 074E                       l620 0771                       l614 0767  
                     l606 0753                       l616 076C                       l608 0758  
                     l650 07D4                       l642 07B4                       l634 07A6  
                     l660 07EA                       l654 07DF                       l638 07AE  
                     l686 0776                       l598 073F                       u177 07C3  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WDTE$ON 0000  
            __CFG_WRT$OFF 0000                      _main 0797                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000             __CFG_MCLRE$ON 0000  
            main@contador 0077                     ?_main 0070                     _PORTB 0006  
                   _PORTC 0007                     _TRISB 0086                     _TRISC 0087  
          __CFG_FCMEN$OFF 0000                     _tabla 073A            __CFG_BOREN$OFF 0000  
                   status 0003                     wtemp0 007E           __initialization 07FA  
            __end_of_main 07FA                    ??_main 0074                    ?_tabla 0070  
          __CFG_PWRTE$OFF 0000   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_tabla 0797                   ??_tabla 0072                __pmaintext 0797  
                 _bandera 0079                   __ptext1 073A      end_of_initialization 07FC  
               _PORTCbits 0007       start_initialization 07FA  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0079                 ___latbits 0002            __size_of_tabla 005D  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0063                  tabla@aux 0072  
                tabla@num 0070  
